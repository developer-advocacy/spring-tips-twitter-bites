name: Deploy

env:


  APP_NAME: minis-api
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GCLOUD_ZONE: ${{ secrets.GCLOUD_ZONE }}
  NS_NAME: ${{ secrets.NS_NAME }}
  GCLOUD_SA_KEY: ${{ secrets.GCLOUD_SA_KEY }}


  SPRING_RABBITMQ_HOST: ${{ secrets.SPRING_RABBITMQ_HOST }}
  SPRING_RABBITMQ_PASSWORD: ${{ secrets.SPRING_RABBITMQ_PASSWORD }}
  SPRING_RABBITMQ_PORT: ${{ secrets.SPRING_RABBITMQ_PORT }}
  SPRING_RABBITMQ_USERNAME: ${{ secrets.SPRING_RABBITMQ_USERNAME }}
  SPRING_RABBITMQ_VIRTUAL_HOST: ${{ secrets.SPRING_RABBITMQ_VIRTUAL_HOST }}

  SPRINGTIPS_GITHUB_REBUILD_KEY: ${{ secrets.SPRINGTIPS_GITHUB_REBUILD_KEY }}
  SPRINGTIPS_FONTS_ENCRYPTION_PASSWORD: ${{ secrets.SPRINGTIPS_FONTS_ENCRYPTION_PASSWORD }}
  SPRINGTIPS_FONTS_ENCRYPTION_SALT: ${{ secrets.SPRINGTIPS_FONTS_ENCRYPTION_SALT }}

  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

  SPRING_R2DBC_PASSWORD: ${{ secrets.SPRING_R2DBC_PASSWORD }}
  SPRING_R2DBC_USERNAME: ${{ secrets.SPRING_R2DBC_USERNAME }}
  SPRING_R2DBC_URL: ${{ secrets.SPRING_R2DBC_URL }}

  SPRINGTIPS_TWITTER_USERNAME: ${{ secrets.SPRINGTIPS_TWITTER_USERNAME }}
  SPRINGTIPS_TWITTER_CLIENT_ID: ${{ secrets.SPRINGTIPS_TWITTER_CLIENT_ID }}
  SPRINGTIPS_TWITTER_CLIENT_SECRET: ${{ secrets.SPRINGTIPS_TWITTER_CLIENT_SECRET }}


on:
  push:
    branches: [ main ]


jobs:
  build-and-deploy:

    permissions:
      contents: 'read'
      id-token: 'write'

    name: Setup and Deploy

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: "Setup PATH"
        run: |
          P="${GITHUB_WORKSPACE}/bin"
          mkdir -p $P
          echo "${P}" >> $GITHUB_PATH

      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ env.GKE_CLUSTER  }}'
          location: '${{ env.GCLOUD_ZONE }}'

      - run: |
          gcloud config set project $GCLOUD_PROJECT 
          gcloud --quiet auth configure-docker
          kubectl get pods

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17


      - name: Deploy Site
        run: |

          kubectl get ns/$NS_NAME || kubectl create ns $NS_NAME 
          kubectl config set-context --current --namespace=$NS_NAME
          kubectl config view --minify | grep namespace: && echo "found the namespace.."
          cd $GITHUB_WORKSPACE
          export ROOT_DIR=$GITHUB_WORKSPACE
          ./deploy/deploy.sh
